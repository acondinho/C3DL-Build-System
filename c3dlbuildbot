#!/bin/bash
#####################################
# C3DL Build Bot                    #
# Created: 10/19/2010               #
# Modified on: 11/16/2010           #
#                                   #
# Created by: Andrew Condinho       #
# Modified by: Andrew Condinho      #
#####################################

# Build individual libraries seperatly
# This shall be useful when including/not-including sections in a future update

##########!!!!!!!!!!!!!!!!!!!!!!!#####################
# Ok, so you have two options, if you scroll down you#
# will find the main buildFull function, in this     #
# in this function, you can either build using the   #
# build order used in the current c3dlapi.js file    #
# which SHOULD work, orrr you can attempt this fun   #
# little monstrosity, which seperates the builds by  #
# folder, but in no way has any meaningful order, so #
# not guarenteed it's going to work :P Good Luck!!!! #
##########!!!!!!!!!!!!!!!!!!!!!!!#####################
buildActors()
{
	cat C3DL-Lib/actors/actor.js C3DL-Lib/actors/line.js C3DL-Lib/actors/point.js C3DL-Lib/actors/primitive.js > actorAPI.js
}

buildCamera()
{
	cat C3DL-Lib/camera/camera.js C3DL-Lib/camera/freecamera.js C3DL-Lib/camera/orbitcamera.js > cameraAPI.js
}

buildCollada()
{
	cat C3DL-Lib/collada/collada.js C3DL-Lib/collada/colladaloader.js C3DL-Lib/collada/colladamanager.js C3DL-Lib/collada/colladaqueue.js C3DL-Lib/collada/geometry.js C3DL-Lib/collada/primitiveset.js > colladaAPI.js
}

buildEffects()
{
	cat C3DL-Lib/effects/effect.js C3DL-Lib/effects/effect_docs.js C3DL-Lib/effects/effecttemplate.js > effectsAPI.js
}

buildEnclosure()
{
	cat C3DL-Lib/enclosure/boundingbox.js C3DL-Lib/enclosure/boundingsphere.js C3DL-Lib/enclosure/visualboundingsphere.js > enclosureAPI.js
}

buildFrustCull()
{
	cat C3DL-Lib/frustum_culling/frustum.js C3DL-Lib/frustum_culling/plane.js > frustumcullingAPI.js
}

buildInteraction()
{
	cat C3DL-Lib/interaction/picking.js C3DL-Lib/interaction/pickingresult.js > interactionAPI.js
}

buildLight()
{
	cat C3DL-Lib/light/directionallight.js C3DL-Lib/light/light.js C3DL-Lib/light/positionallight.js C3DL-Lib/light/spotlight.js > lightAPI.js
}

buildMath()
{
	cat C3DL-Lib/math/mathutils.js C3DL-Lib/math/matrix.js C3DL-Lib/math/mjs.js C3DL-Lib/math/quaternion.js C3DL-Lib/math/vector.js > mathAPI.js
}

buildParticleSys()
{
	cat C3DL-Lib/particle_system/particle.js C3DL-Lib/particle_system/particlesystem.js > particleSysAPI.js
}

buildRenderer()
{
	cat C3DL-Lib/renderer/programobject.js C3DL-Lib/renderer/renderer.js C3DL-Lib/renderer/rendererwebgl.js C3DL-Lib/renderer/renderingobject.js > rendererAPI.js
}

buildScenegraph()
{
	cp C3DL-Lib/scenegraph/scenenode.js scenegraphAPI.js
}

buildShaders()
{
		cat C3DL-Lib/shaders/bounding_sphere/bounding_sphere_fs.js C3DL-Lib/shaders/bounding_sphere/bounding_sphere_vs.js C3DL-Lib/shaders/line/line_fs.js C3DL-Lib/shaders/line/line_vs.js C3DL-Lib/shaders/model/cartoon/cartoon_callback.js C3DL-Lib/shaders/model/cartoon/cartoon_fs.js C3DL-Lib/shaders/model/cartoon/cartoon_vs.js C3DL-Lib/shaders/model/gooch/gooch_callback.js C3DL-Lib/shaders/model/gooch/gooch_fs.js C3DL-Lib/shaders/model/gooch/gooch_vs.js C3DL-Lib/shaders/model/greyscale/greyscale_callback.js C3DL-Lib/shaders/model/greyscale/greyscale_fs.js C3DL-Lib/shaders/model/greyscale/greyscale_vs.js C3DL-Lib/shaders/model/light/light_vs.js C3DL-Lib/shaders/model/material/material.js C3DL-Lib/shaders/model/sepia/sepia_callback.js C3DL-Lib/shaders/model/sepia/sepia_fs.js C3DL-Lib/shaders/model/sepia/sepia_vs.js C3DL-Lib/shaders/model/solid_color/solid_color_callback.js C3DL-Lib/shaders/model/solid_color/solid_color_fs.js C3DL-Lib/shaders/model/solid_color/solid_color_vs.js C3DL-Lib/shaders/model/standard/model_fs.js C3DL-Lib/shaders/model/standard/model_vs.js C3DL-Lib/shaders/model/standard/std_callback.js C3DL-Lib/shaders/particle_system/psys_fs.js C3DL-Lib/shaders/particle_system/psys_vs.js C3DL-Lib/shaders/point/point/point_fs.js C3DL-Lib/shaders/point/point/point_vs.js C3DL-Lib/shaders/point/sphere/point_sphere_fs.js C3DL-Lib/shaders/point/sphere/point_sphere_vs.js > shadersAPI.js
}

buildTexture()
{
	cat C3DL-Lib/texture/texture.js C3DL-Lib/texture/texturemanager.js C3DL-Lib/texture/textureutils.js > textureAPI.js
}

buildUtilities()
{
	cp C3DL-Lib/utilities/utilities.js utilitiesAPI.js
}

buildMains()
{
	cat C3DL-Lib/c3dlnamespace.js C3DL-Lib/constants.js C3DL-Lib/debug.js C3DL-Lib/init.js C3DL-Lib/material.js C3DL-Lib/matrixstack.js C3DL-Lib/scene.js > mainsAPI.js
}

buildMainsNoDebug()
{
	cat C3DL-Lib/c3dlnamespace.js C3DL-Lib/constants.js C3DL-Lib/init.js C3DL-Lib/material.js C3DL-Lib/matrixstack.js C3DL-Lib/scene.js > mainsAPI.js
}

# Build functions
buildFull()
{
	# Here is where you make the switch! comment out up to the cat mainsAPI.js... line and uncomment following the batman statement.

	# test individual build systems
	buildActors
	buildCamera
	buildCollada
	buildEffects
	buildEnclosure
	buildFrustCull
	buildInteraction
	buildLight
	buildMath
	buildParticleSys
	buildRenderer
	buildScenegraph
	buildShaders
	buildTexture
	buildUtilities
	
	# Build one file from these new cats
	cat mainsAPI.js actorAPI.js cameraAPI.js colladaAPI.js effectsAPI.js enclosureAPI.js frustumcullingAPI.js interactionAPI.js lightAPI.js mathAPI.js particleSysAPI.js rendererAPI.js scenegraphAPI.js shadersAPI.js textureAPI.js utilitiesAPI.js > c3dlapi.js

	# Holy Concatenation batman
	#cat C3DL-Lib/c3dlnamespace.js C3DL-Lib/constants.js C3DL-Lib/effects/effect_docs.js C3DL-Lib/debug.js C3DL-Lib/renderer/renderer.js C3DL-Lib/renderer/rendererwebgl.js C3DL-Lib/renderer/programobject.js C3DL-Lib/math/mjs.js C3DL-Lib/math/mathutils.js C3DL-Lib/math/vector.js C3DL-Lib/math/matrix.js C3DL-Lib/math/quaternion.js C3DL-Lib/matrixstack.js C3DL-Lib/camera/camera.js C3DL-Lib/camera/freecamera.js C3DL-Lib/camera/orbitcamera.js C3DL-Lib/enclosure/boundingsphere.js C3DL-Lib/enclosure/visualboundingsphere.js C3DL-Lib/enclosure/boundingbox.js C3DL-Lib/actors/actor.js C3DL-Lib/actors/primitive.js C3DL-Lib/actors/point.js C3DL-Lib/actors/line.js C3DL-Lib/frustum_culling/frustum.js C3DL-Lib/frustum_culling/plane.js C3DL-Lib/scene.js C3DL-Lib/texture/texture.js C3DL-Lib/texture/texturemanager.js C3DL-Lib/texture/textureutils.js C3DL-Lib/collada/colladamanager.js C3DL-Lib/collada/colladaloader.js C3DL-Lib/collada/colladaqueue.js C3DL-Lib/collada/geometry.js C3DL-Lib/collada/primitiveset.js C3DL-Lib/light/light.js C3DL-Lib/light/positionallight.js C3DL-Lib/light/directionallight.js C3DL-Lib/light/spotlight.js C3DL-Lib/material.js C3DL-Lib/collada/collada.js C3DL-Lib/scenegraph/scenenode.js C3DL-Lib/utilities/utilities.js C3DL-Lib/shaders/model/light/light_vs.js C3DL-Lib/shaders/model/material/material.js C3DL-Lib/shaders/model/standard/model_fs.js C3DL-Lib/shaders/model/standard/model_vs.js C3DL-Lib/shaders/model/standard/std_callback.js C3DL-Lib/shaders/particle_system/psys_vs.js C3DL-Lib/shaders/particle_system/psys_fs.js C3DL-Lib/shaders/point/point/point_vs.js C3DL-Lib/shaders/point/point/point_fs.js C3DL-Lib/shaders/point/sphere/point_sphere_vs.js C3DL-Lib/shaders/point/sphere/point_sphere_fs.js C3DL-Lib/shaders/line/line_vs.js C3DL-Lib/shaders/line/line_fs.js C3DL-Lib/shaders/bounding_sphere/bounding_sphere_vs.js C3DL-Lib/shaders/bounding_sphere/bounding_sphere_fs.js C3DL-Lib/shaders/model/greyscale/greyscale_vs.js C3DL-Lib/shaders/model/greyscale/greyscale_fs.js C3DL-Lib/shaders/model/greyscale/greyscale_callback.js C3DL-Lib/shaders/model/sepia/sepia_vs.js C3DL-Lib/shaders/model/sepia/sepia_fs.js C3DL-Lib/shaders/model/sepia/sepia_callback.js C3DL-Lib/shaders/model/cartoon/cartoon_vs.js C3DL-Lib/shaders/model/cartoon/cartoon_fs.js C3DL-Lib/shaders/model/cartoon/cartoon_callback.js C3DL-Lib/shaders/model/gooch/gooch_vs.js C3DL-Lib/shaders/model/gooch/gooch_fs.js C3DL-Lib/shaders/model/gooch/gooch_callback.js C3DL-Lib/shaders/model/solid_color/solid_color_vs.js C3DL-Lib/shaders/model/solid_color/solid_color_fs.js C3DL-Lib/shaders/model/solid_color/solid_color_callback.js C3DL-Lib/effects/effecttemplate.js C3DL-Lib/effects/effect.js C3DL-Lib/particle_system/particlesystem.js C3DL-Lib/particle_system/particle.js C3DL-Lib/init.js C3DL-Lib/interaction/picking.js C3DL-Lib/interaction/pickingresult.js > c3dlapi.js

}

buildStripped()
{
	jsmin <c3dlapi.js >c3dlapi-min.js
	rm c3dlapi.js
	mv c3dlapi-min.js c3dlapi.js
}

# Main Code Block
if [ "$#" -eq 0 ] 
then
	echo "No parameters supplied to the almighty build system" > c3dlapi.js
else
	# Check for whether or not to include debugging in mains
	if [ "$2" = "debug" ]
	then
		buildMains
	elif [ "$2" = "nodebug" ]
	then
		buildMainsNoDebug
	else
		#Default just build everything
		buildMains
	fi
	
	if [ "$1" = "full" ]; 
	then
		buildFull
	elif [ "$1" = "minified" ]; 
	then
		buildFull
		buildStripped
	else
		echo "Incorrect parameters supplied to the almighty build system" > c3dlapi.js
	fi

cat c3dlapi.js

fi
